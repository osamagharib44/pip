services:
  frontend:
    container_name: frontend
    build: ./frontend
    image: frontend
    ports:
      - 80:80
    expose:
      - 80
    networks:
      - appNetworkFront

  backend:
    container_name: backend
    restart: always
    build: ./backend
    image: backend
    volumes:
      - imagesVol:/app/images
    environment:
      - PORT=3000
      - DB_HOST=mongodb
      - DB_PORT=27017
      - DB_NAME=pip
      - RABBIT_HOST=rabbitmq
      - RABBIT_PORT=5672
    ports:
      - 3000:3000
    expose:
      - 3000
    depends_on:
      - rabbitmq
      - mongodb
    networks:
      - appNetworkBack

  rabbitmq:
    container_name: rabbitmq
    image: rabbitmq
    expose: 
      - 5672
    ports:
      - 5672:5672
    networks:
      - appNetworkBack

  mongodb:
    container_name: mongodb
    image: mongodb/mongodb-community-server
    volumes:
      - mongo:/data/db
    ports:
      - 27017:27017
    expose: 
      - 27017
    networks:
      - appNetworkBack    


networks:
  appNetworkFront:
  appNetworkBack:

volumes:
  imagesVol:
    name: imagesVol
  mongo:
    external: true
    name: mongo
    